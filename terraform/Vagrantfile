# -*- mode: ruby -*-
# vi: set ft=ruby :
ENV['VAGRANT_DEFAULT_PROVIDER'] = 'vmware_fusion'

Vagrant.configure("2") do |config|
  config.vm.box      = "generic/ubuntu2204"
  config.vm.hostname = "eks-image-builder"
  config.vm.network "private_network", type: "dhcp"

  config.vm.provider :vmware_fusion do |v|
    v.gui = false
    v.vmx["vhv.enable"] = "TRUE"
  end

  config.vm.provision "shell", privileged: true, inline: <<-SHELL
    set -euo pipefail

    echo "==> Updating APT cache & installing base packages"
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
      jq make python3-pip qemu-kvm libvirt-daemon-system \
      libvirt-clients virtinst cpu-checker libguestfs-tools \
      libosinfo-bin unzip ansible git snapd

    echo "==> Installing yq via snap"
    snap install yq

    echo "==> Enabling password & root SSH login for Packer"
    sed -i 's/^#\\?PasswordAuthentication .*/PasswordAuthentication yes/' /etc/ssh/sshd_config
    sed -i 's/^#PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config
    systemctl restart sshd

    echo "==> Creating dedicated image-builder user with sudo"
    if ! id image-builder &>/dev/null; then
      adduser --disabled-password --gecos "" image-builder
      echo "image-builder:StrongP@ssw0rd!" | chpasswd
      usermod -aG sudo image-builder
      echo "image-builder ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/image-builder
      chmod 440 /etc/sudoers.d/image-builder
    fi

    echo "==> Setting EKSA_SKIP_VALIDATE_DEPENDENCIES for image-builder user"
    echo 'export EKSA_SKIP_VALIDATE_DEPENDENCIES=true' >> /home/image-builder/.profile
    chown image-builder:image-builder /home/image-builder/.profile

    echo "==> Adding image-builder user to kvm group & fixing /dev/kvm perms"
    usermod -aG kvm image-builder
    [ -c /dev/kvm ] && chmod 666 /dev/kvm && chown root:kvm /dev/kvm || echo "/dev/kvm not found"

    echo "==> Allowing ssh-rsa for local Ansible/Packer connections"
    sudo -u image-builder mkdir -p /home/image-builder/.ssh
    sudo -u image-builder bash -c "printf 'HostKeyAlgorithms +ssh-rsa\\\\nPubkeyAcceptedKeyTypes +ssh-rsa\\\\n' >> /home/image-builder/.ssh/config"
    sudo -u image-builder chmod 600 /home/image-builder/.ssh/config

    echo "==> Installing latest eks-a image-builder CLI"
    # Simplified installation process
    cd /tmp
    sudo -u image-builder /snap/bin/yq --version  # Ensure yq is available

    # Get the latest EKS-A version
    EKSA_RELEASE_VERSION=$(curl -sL https://anywhere-assets.eks.amazonaws.com/releases/eks-a/manifest.yaml | /snap/bin/yq '.spec.latestVersion')

    # Get bundle manifest URL (using single quotes to avoid expansion issues)
    BUNDLE_MANIFEST_URL=$(curl -sL https://anywhere-assets.eks.amazonaws.com/releases/eks-a/manifest.yaml | \
      /snap/bin/yq '.spec.releases[] | select(.version == "'"$EKSA_RELEASE_VERSION"'").bundleManifestUrl')

    # Get image builder tarball URI
    IMAGEBUILDER_TARBALL_URI=$(curl -sL "$BUNDLE_MANIFEST_URL" | \
      /snap/bin/yq '.spec.versionsBundles[0].eksD.imagebuilder.uri')

    # Download and install
    curl -sL "$IMAGEBUILDER_TARBALL_URI" | tar xz ./image-builder
    sudo install -m 0755 image-builder /usr/local/bin/image-builder

    echo "==> Setting PATH for image-builder user"
    echo 'export PATH=$PATH:/snap/bin' >> /home/image-builder/.profile

    echo "==> Validating installation"
    sudo -u image-builder image-builder version
    echo "==> Provisioning complete."
  SHELL
end